# Compilers and linkers

OBJCC = gcc
CC = gcc
CXX = g++
LD = $(CXX)
AR = ar

# Options for compilation

GNUSTEP_OPTS =	-DGNUSTEP \
		-DGNU_RUNTIME=1 \
		-D_NATIVE_OBJC_EXCEPTIONS \
		-fgnu-runtime \
		-fexceptions \
		-fobjc-exceptions \
		-fconstant-string-class=NSConstantString

GCC_OPTS = 	-O2 \
		-fPIC \
		-Wno-import \
		-Wno-multichar \
		-g \
		-D_FILE_OFFSET_BITS=64 \
		-isystem /usr/include/GNUstep

OBJC_OPTS =	-std=gnu99

C_OPTS =	-std=gnu99

CXX_OPTS =

AUTODEPENDENCY_CFLAGS=-MMD -MF$(@:.o=.d) -MT$@

ALL_OBJCFLAGS = $(OBJC_OPTS) $(GCC_OPTS) $(GNUSTEP_OPTS) $(CFLAGS) $(OBJCFLAGS)
ALL_CFLAGS = $(C_OPTS) $(GCC_OPTS) $(CFLAGS)
ALL_CXXFLAGS = $(CXX_OPTS) $(GCC_OPTS) $(CXXFLAGS)

# Options for linking

LIBS =	-Wl,--no-whole-archive \
	-lgnustep-base \
	-lz \
	-lbz2 \
	-lwavpack \
	-licuuc \
	-lobjc \
	-lm

ALL_LDFLAGS =	-Wl,--whole-archive \
		-fexceptions \
		-fgnu-runtime \
		$(LDFLAGS)

# Paths

SOURCE_DIR = .
BUILD_DIR = Build

# Files

PLATFORM_OBJC_FILES =	XADPlatformLinux.m \
			XADStringICU.m

include Makefile.common

# Compilation rules

all: $(EXECUTABLE_FILES) $(LIBRARY_FILES)

libXADMaster.a: $(LIBRARY_OBJS)
	rm -f $@
	$(AR) rcs $@ $^


../UniversalDetector/libUniversalDetector.a:
	make -C ../UniversalDetector -f Makefile.linux #GCC_OPTS+=-fPIC

libXADMaster.so:  $(LIBRARY_OBJS) ../UniversalDetector/libUniversalDetector.a
	rm -f $@
	# $(CC) -shared -o $@ -Wl,--no-whole-archive ../UniversalDetector/libUniversalDetector.a $^
	$(LD) $(ALL_LDFLAGS) -shared -o $@ $^ $(LIBS)

unar: $(UNAR_OBJS) $(CMDLINE_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

lsar: $(LSAR_OBJS) $(CMDLINE_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

example: $(EXAMPLE_OBJS) libXADMaster.a ../UniversalDetector/libUniversalDetector.a
	$(LD) $(ALL_LDFLAGS) -o $@ $^ $(LIBS)

soexample:
	gcc -o soexample example.c -lXADMaster # Minimalistic target - not using the Makefile's context

BIN_INSTALL_DIR = /usr/bin
LIB_INSTALL_DIR = /usr/lib
INC_INSTALL_DIR = /usr/include
PKC_INSTALL_DIR = /usr/lib/pkgconfig/

libinstall: libXADMaster.so
	sudo mkdir -p $(BIN_INSTALL_DIR) $(LIB_INSTALL_DIR) $(INC_INSTALL_DIR) $(PKC_INSTALL_DIR)
	sudo cp libXADMaster.h $(INC_INSTALL_DIR)
	sudo cp libXADMaster.pc $(PKC_INSTALL_DIR)
	sudo cp libXADMaster.so $(LIB_INSTALL_DIR)
	sudo ldconfig

install: unar lsar libinstall
	sudo cp unar lsar $(BIN_INSTALL_DIR)

uninstall:
	sudo rm $(BIN_INSTALL_DIR)/unar $(BIN_INSTALL_DIR)/lsar
	sudo rm $(LIB_INSTALL_DIR)/libXADMaster.so
	sudo rm $(INC_INSTALL_DIR)/libXADMaster.h
	sudo rm $(PKC_INSTALL_DIR)/libXADMaster.pc
	sudo ldconfig

clean:
	rm -rf $(BUILD_DIR) $(EXECUTABLE_FILES) $(LIBRARY_FILES)
	make -C ../UniversalDetector -f Makefile.linux clean

.PHONY: ../UniversalDetector/libUniversalDetector.a clean

# Suffix rules

.SUFFIXES: .o .c .m .cpp

$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.c
	@mkdir -p $(dir $@)
	$(CC) $(ALL_CFLAGS) $(AUTODEPENDENCY_CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.m
	@mkdir -p $(dir $@)
	$(OBJCC) $(ALL_OBJCFLAGS) $(AUTODEPENDENCY_CFLAGS) -c $< -o $@

$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(ALL_CXXFLAGS) $(AUTODEPENDENCY_CFLAGS) -c $< -o $@

-include $(OBJS:.o=.d)
